     1                                  ; REVERSE THE OUTPUT STRING
     2                                  ; Bob Allen
     3                                  ; Fall 2022
     4                                  ; based upon the textbook example:
     5                                  ; Console Output
     6                                  ; Materials - NASM (32-bit)
     7                                  ; Copyright (c) 2017 Hall & Slonka
     8                                  
     9                                  ; Uses system call information from Chapter 10
    10                                  
    11                                  SECTION .data
    12 00000000 48692C206D79206E61-     s1: DB "Hi, my name is Josh", 10, 0
    13 00000009 6D65206973204A6F73-
    14 00000012 680A00             
    15                                  lenS1: EQU ($ - s1)
    16 00000015 07                      num: db 7
    17                                  
    18                                  
    19 00000016 0A                      newline: db 10
    20                                  
    21                                  SECTION .bss
    22 00000000 <res 00000015>          r1: RESB lenS1
    23 00000015 <res 00000001>          output: RESB 1
    24                                  
    25                                  SECTION .text
    26                                  global _main
    27                                  _main:
    28                                  
    29 00000000 A0[15000000]            	mov al,[num]
    30 00000005 0430                    	add al,'0'
    31 00000007 A2[15000000]              	mov [output],al
    32 0000000C B804000000              	mov eax, 4     ; syswrite
    33 00000011 BB01000000              	mov ebx, 1     ; stdout
    34 00000016 B9[15000000]            	mov ecx, output    ; starting address of string
    35 0000001B BA01000000              	mov edx, 1 ; len of string
    36 00000020 CD80                    	int 80h
    37                                  
    38                                  ; Print a new line
    39 00000022 B804000000              	mov eax,4
    40 00000027 BB01000000              	mov ebx,1
    41 0000002C B9[16000000]            	mov ecx,newline
    42 00000031 BA01000000              	mov edx,1
    43 00000036 CD80                    	int 80h
    44                                  
    45                                  
    46                                  ; Print
    47 00000038 B804000000              	mov eax, 4     ; syswrite
    48 0000003D BB01000000              	mov ebx, 1     ; stdout
    49 00000042 B9[00000000]            	mov ecx, s1    ; starting address of string
    50 00000047 BA15000000              	mov edx, lenS1 ; len of string
    51 0000004C CD80                    	int 80h
    52                                  
    53                                  ; Reverse the string, char by char from s1 to r1
    54 0000004E B915000000              	mov ecx,lenS1
    55 00000053 BB[14000000]            	mov ebx,s1+lenS1-1  	;;; point to the last char of s1
    56 00000058 BA[00000000]            	mov edx,r1		;;; point to the first char of r1
    57                                  
    58                                  revTop:
    59 0000005D 8A23                    	mov ah,[ebx]
    60 0000005F 8822                    	mov [edx],ah
    61 00000061 42                      	inc edx
    62 00000062 4B                      	dec ebx
    63 00000063 E2F8                    	loop revTop
    64                                  
    65                                  ; Reverse Print
    66 00000065 B804000000              	mov eax, 4     ; syswrite
    67 0000006A BB01000000              	mov ebx, 1     ; stdout
    68 0000006F B9[00000000]            	mov ecx, r1    ; starting address of string
    69 00000074 BA15000000              	mov edx, lenS1 ; len of string
    70 00000079 CD80                    	int 80h
    71                                  
    72                                  ; Print a new line
    73 0000007B B804000000              	mov eax,4
    74 00000080 BB01000000              	mov ebx,1
    75 00000085 B9[16000000]            	mov ecx,newline
    76 0000008A BA01000000              	mov edx,1
    77 0000008F CD80                    	int 80h
    78                                  
    79                                  
    80                                  done:	
    81 00000091 B801000000              mov eax, 1
    82 00000096 BB00000000              mov ebx, 0
    83 0000009B CD80                    int 80h
    84                                  
    85                                  
    86                                  
    87                                  
    88                                  
    89                                  
    90                                  
    91                                  
    92                                  
    93                                  
    94                                  
    95                                  
    96                                  
    97                                  
    98                                  
    99                                  
   100                                  
   101                                  
   102                                  
   103                                  
   104                                  
   105                                  
   106                                  
   107                                  ; Reverse the string 
   108 0000009D BB[00000000]            	mov ebx,s1
   109 000000A2 B915000000              	mov ecx,lenS1
   110                                  top:
   111 000000A7 FF33                    	push DWORD [ebx]
   112 000000A9 43                      	inc  ebx
   113 000000AA E2FB                    	loop top
   114                                  
   115 000000AC BB[00000000]            	mov ebx,s1
   116 000000B1 B915000000              	mov ecx,lenS1
   117                                  top2:
   118 000000B6 8F03                    	pop DWORD[ebx]
   119 000000B8 43                      	inc ebx
   120 000000B9 E2FB                    	loop top2
   121                                  
   122 000000BB B804000000              print2: mov eax, 4     ; syswrite
   123 000000C0 BB01000000              	mov ebx, 1     ; stdout
   124 000000C5 B9[00000000]            	mov ecx, s1    ; starting address of string
   125 000000CA BA15000000              	mov edx, lenS1 ; len of string
   126 000000CF CD80                    	int 80h
   127                                  
   128                                  
   129                                  
   130                                  
   131                                  
   132                                  
   133                                  
   134                                  
   135                                  
