     1                                  ; Gabe Imlay
     2                                  ; CSC322 <10/05/22>
     3                                  ; Project 4: Fibonacci Sequence
     4                                  ; This program will calculate and store the first 
     5                                  ; 16 numbers in the Fibonacci sequence.
     6                                  
     7                                  SECTION .data
     8                                  ; define data/variables here.  Think DB, DW, DD, DQ
     9                                  
    10                                  SECTION .bss
    11                                  ; define uninitialized data here
    12 00000000 <res 00000020>          Fibs:	RESW 16
    13                                  
    14                                  SECTION .text
    15                                  global _main
    16                                  _main:
    17                                  
    18                                  ; put your code here.
    19                                  
    20 00000000 66B80000                mov AX, 0000d
    21 00000004 66A3[00000000]          mov [Fibs], AX  ;1
    22                                  b1:
    23 0000000A 66B80100                mov AX, 0001d
    24 0000000E 66A3[02000000]          mov [Fibs+2], AX    ;2
    25                                  b2:
    26 00000014 66A1[00000000]          mov AX, [Fibs]
    27 0000001A 660305[02000000]        add AX, [Fibs + 2]
    28 00000021 66A3[04000000]          mov [Fibs+4], AX    ;3
    29                                  b3:
    30 00000027 66A1[02000000]          mov AX, [Fibs + 2]
    31 0000002D 660305[04000000]        add AX, [Fibs + 4]
    32 00000034 66A3[06000000]          mov [Fibs + 6], AX  ;4
    33                                  b4:
    34 0000003A 66A1[04000000]          mov AX, [Fibs + 4]
    35 00000040 660305[06000000]        add AX, [Fibs + 6]
    36 00000047 66A3[08000000]          mov [Fibs + 8], AX  ;5
    37                                  b5:
    38 0000004D 66A1[06000000]          mov AX, [Fibs + 6]
    39 00000053 660305[08000000]        add AX, [Fibs + 8]
    40 0000005A 66A3[0A000000]          mov [Fibs + 10], AX ;6
    41                                  b6:
    42 00000060 66A1[08000000]          mov AX, [Fibs + 8]
    43 00000066 660305[0A000000]        add AX, [Fibs + 10]
    44 0000006D 66A3[0C000000]          mov [Fibs + 12], AX ;7
    45                                  b7:
    46 00000073 66A1[0A000000]          mov AX, [Fibs + 10]
    47 00000079 660305[0C000000]        add AX, [Fibs + 12]
    48 00000080 66A3[0E000000]          mov [Fibs + 14], AX ;8
    49                                  b8:
    50 00000086 66A1[0C000000]          mov AX, [Fibs + 12]
    51 0000008C 660305[0E000000]        add AX, [Fibs + 14]
    52 00000093 66A3[10000000]          mov [Fibs + 16], AX ;9
    53                                  b9:
    54 00000099 66A1[0E000000]          mov AX, [Fibs + 14]
    55 0000009F 660305[10000000]        add AX, [Fibs + 16]
    56 000000A6 66A3[12000000]          mov [Fibs + 18], AX ;10
    57                                  b10:
    58 000000AC 66A1[10000000]          mov AX, [Fibs + 16]
    59 000000B2 660305[12000000]        add AX, [Fibs + 18]
    60 000000B9 66A3[14000000]          mov [Fibs + 20], AX ;11
    61                                  b11:
    62 000000BF 66A1[12000000]          mov AX, [Fibs + 18]
    63 000000C5 660305[14000000]        add AX, [Fibs + 20]
    64 000000CC 66A3[16000000]          mov [Fibs + 22], AX ;12
    65                                  b12:
    66 000000D2 66A1[14000000]          mov AX, [Fibs + 20]
    67 000000D8 660305[16000000]        add AX, [Fibs + 22]
    68 000000DF 66A3[18000000]          mov [Fibs + 24], AX ;13
    69                                  b13:
    70 000000E5 66A1[16000000]          mov AX, [Fibs + 22]
    71 000000EB 660305[18000000]        add AX, [Fibs + 24]
    72 000000F2 66A3[1A000000]          mov [Fibs + 26], AX ;14
    73                                  b14:
    74 000000F8 66A1[18000000]          mov AX, [Fibs + 24]
    75 000000FE 660305[1A000000]        add AX, [Fibs + 26]
    76 00000105 66A3[1C000000]          mov [Fibs + 28], AX ;15
    77                                  b15:
    78 0000010B 66A1[1A000000]          mov AX, [Fibs + 26]
    79 00000111 660305[1C000000]        add AX, [Fibs + 28]
    80 00000118 66A3[1E000000]          mov [Fibs + 30], AX ;16
    81                                  lastBreak:
    82                                  ; Normal termination code
    83 0000011E B801000000              mov eax, 1
    84 00000123 BB00000000              mov ebx, 0
    85 00000128 CD80                    int 80h
