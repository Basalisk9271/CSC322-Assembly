     1                                  ; Gabe Imlay
     2                                  ; CSC322 <10/05/22>
     3                                  ; Project 3: Adding Integers
     4                                  ; This project sums three different arrays of signed integers, 
     5                                  ; and calculate a grand total of all three sums.
     6                                  
     7                                  SECTION .data
     8                                  ; define data/variables here.  Think DB, DW, DD, DQ
     9 00000000 FFFEFDFCFB              bArray:         DB		-1,-2,-3,-4,-5
    10 00000005 000001000200030004-     wArray:         DW		0,1,2,3,4
    11 0000000E 00                 
    12 0000000F 4201000022030000D2-     dArray:         DD		322,322h,322q,1833,1833h
    13 00000018 000000290700003318-
    14 00000021 0000               
    15 00000023 00                      bArraySum:      DB		0
    16 00000024 0000                    wArraySum:      DW		0
    17 00000026 00000000                dArraySum:      DD		0
    18 0000002A 00000000                grandTotal:     DD		0
    19                                  
    20                                  SECTION .bss
    21                                  ; define uninitialized data here
    22                                  
    23                                  SECTION .text
    24                                  global _main
    25                                  _main:
    26                                  
    27                                  ; put your code here.
    28                                  
    29 00000000 8A25[00000000]          mov AH ,[bArray]
    30 00000006 0225[01000000]          add AH, [bArray+1]
    31 0000000C 0225[02000000]          add AH, [bArray+2]
    32 00000012 0225[03000000]          add AH, [bArray+3]
    33 00000018 0225[04000000]          add AH, [bArray+4]
    34 0000001E 8825[23000000]          mov [bArraySum], AH
    35                                  b1:
    36 00000024 668B1D[05000000]        mov BX ,[wArray]
    37 0000002B 66031D[07000000]        add BX, [wArray+2]
    38 00000032 66031D[09000000]        add BX, [wArray+4]
    39 00000039 66031D[0B000000]        add BX, [wArray+6]
    40 00000040 66031D[0D000000]        add BX, [wArray+8]
    41 00000047 66891D[24000000]        mov [wArraySum], BX
    42                                  b2:
    43 0000004E A1[0F000000]            mov EAX ,[dArray]
    44 00000053 0305[13000000]          add EAX, [dArray+4]
    45 00000059 0305[17000000]          add EAX, [dArray+8]
    46 0000005F 0305[1B000000]          add EAX, [dArray+12]
    47 00000065 0305[1F000000]          add EAX, [dArray+16]
    48 0000006B A3[26000000]            mov [dArraySum], EAX
    49                                  b3:
    50                                  
    51 00000070 0FBE1D[23000000]        movsx EBX, byte[bArraySum]
    52 00000077 0FBF0D[24000000]        movsx ECX, word[wArraySum]
    53                                  b4:
    54                                  
    55 0000007E 0105[2A000000]          add [grandTotal], EAX
    56 00000084 011D[2A000000]          add [grandTotal], EBX
    57 0000008A 010D[2A000000]          add [grandTotal], ECX
    58                                  lastBreak:
    59                                  
    60                                  
    61                                  ; Normal termination code
    62 00000090 B801000000              mov eax, 1
    63 00000095 BB00000000              mov ebx, 0
    64 0000009A CD80                    int 80h
